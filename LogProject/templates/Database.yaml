apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongo
spec:
  selector:
    matchLabels:
      app: mongo
  serviceName: "mongo"
  replicas: {{ .Values.database.deployment.replicas}}
  template:
    metadata:
      labels:
        app: mongo
    spec:
      terminationGracePeriodSeconds: {{ .Values.database.deployment.terminationGracePeriodSeconds}}
      containers:
      - name: mongo
        image: mongo
        command: 
        - mongod 
        - "--bind_ip_all"
        - "--replSet"
        - rs0
        ports:
        - containerPort: 27017
        env:
        - name: MONGO_INITDB_ROOT_PASSWORD
          value: {{ .Values.database.deployment.env.MONGO_INITDB_ROOT_PASSWORD}}
        - name: MONGO_INITDB_ROOT_USERNAME
          value: {{ .Values.database.deployment.env.MONGO_INITDB_ROOT_USERNAME}}
        - name: MONGO_INITDB_DATABASE
          value: {{ .Values.database.deployment.env.MONGO_INITDB_DATABASE}}
        volumeMounts:
        - name: mongo-volume
          mountPath: /data/db
  volumeClaimTemplates:
  - metadata:
      name: mongo-volume
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 1Gi

---
apiVersion: v1
kind: Service
metadata:
  name: mongo
  labels:
    name: mongo
    env: test
    owner: szabi
spec:
  ports:
    - name: mongo
      port: 27017
      targetPort: 27017
  clusterIP: None
  selector:
    app: mongo